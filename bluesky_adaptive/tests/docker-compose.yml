version: '3'

services:
  zookeeper:
    image: 'docker.io/bitnami/zookeeper:3.8'
    container_name: zookeeper
    ports:
      - '2181:2181'
    volumes:
      - './zookeeper:/bitnami/zookeeper/conf'
      - 'zookeeper_data:/bitnami/zookeeper/data'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - re_manager
  kafka:
    image: 'docker.io/bitnami/kafka:2.8'
    container_name: kafka
    ports:
      - '9092:9092'
      - '29092:29092'
    volumes:
      - 'kafka_data:/bitnami'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:29092,PLAINTEXT_HOST://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=false
    depends_on:
      - zookeeper
    networks:
      - re_manager

  mongodb:
    image: 'docker.io/library/mongo:latest'
    container_name: mongodb
    ports:
      - '27017:27017'
    volumes:
      - '/tmp/databroker:/data/db'
    networks:
      - re_manager
  redis:
    image: redis:6.2-alpine
    ports:
      - 6379:6379
    networks:
      - re_manager
  qserver:
    image: qserver:latest
    environment:
      - REDIS_ADDR=redis:6379
    networks:
      - re_manager
    ports:
      - 60615:60615
    depends_on:
      - redis

  httpserver:
    image: http-server:latest
    ports:
      - 60610:60610
    environment:
      - QSERVER_ZMQ_CONTROL_ADDRESS=tcp://qserver:60615
      - QSERVER_ZMQ_INFO_ADDRESS=tcp://qserver:60625
    networks:
      - re_manager

networks:
  re_manager:
    driver: bridge

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
